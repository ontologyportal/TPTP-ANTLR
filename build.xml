<project xmlns:ivy="antlib:org.apache.ivy.ant"
        name="TPTP" default="all" basedir=".">

    <property name="ivy.install.version" value="2.5.1"/>

    <property name="ivy.home" value="${basedir}/.ivy"/>
    <property name="ivy.jar.dir" value="${ivy.home}/lib"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

    <property name="app.name" value="tptpAntlr"/>
    <property name="build.home" value="build"/>
    <property name="build.classes" value="${build.home}/classes"/>
    <!--<property name="build.lib" value="${build.home}/lib"/>-->
    <property environment="env"/>
    <property name="build.test.classes" value="${build.home}/test-classes"/>

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load Ivy here from Ivy home, in case the user has not already dropped
                it into Ant's lib dir (note that the latter copy will always take precedence).
                We will not fail as long as local lib dir exists (it may be empty) and
                Ivy is in at least one of Ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="init" depends="init-ivy">
        <property name="sigmakee.home" value="${env.SIGMA_SRC}"/>
        <echo>Java Version via Ant: ${ant.java.version}</echo>
        <echo>Java Version System Prop: ${java.version}</echo>

        <ant antfile="../SigmaUtils/build.xml" inheritAll="false" target="all"/>
        <copy todir="${basedir}/lib" file="../SigmaUtils/sigmaUtils.jar"/>
        <ivy:retrieve/>
    </target>

    <target name="compile" depends="init" description="Compile the project and place in ${build.classes}.">
        <mkdir dir="${build.classes}"/>
        <javac destdir="${build.classes}" debug="on" optimize="on" deprecation="on" includeantruntime="false"
               classpathref="compile.classpath">
            <src refid="core.sourcepath"/>
        </javac>
<!--        <copy todir="${build.lib}">
            <fileset dir="${basedir}/lib"/>
        </copy>-->
    </target>

    <path id="core.sourcepath">
        <pathelement path="src/java"/>
    </path>

    <path id="compile.classpath">
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="test.sourcepath">
        <pathelement path="test/src/main/java"/>
    </path>

    <path id="classpath.test">
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${build.classes}"/>
    </path>

    <target name="test-compile" depends="compile">
        <mkdir dir="${build.test.classes}"/>
        <javac destdir="${build.test.classes}" includeantruntime="false">
            <src refid="test.sourcepath"/>
            <classpath refid="classpath.test"/>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${build.test.classes}"/>
            </classpath>
            <formatter type="brief" usefile="false"/>
            <batchtest>
                <fileset dir="test/src/main/java" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <!-- target name="all" depends="dist, api_doc" -->
    <target name="all" depends="clean,test">
        <jar destfile="${basedir}/tptp.jar">
            <fileset dir="${build.classes}"/>
        </jar>
        <tstamp>
            <format property="TODAY_US" pattern="yyyy-MM-dd HH:mm:ss:sss zzz" locale="en,US"/>
        </tstamp>
        <echo>the system date/time is ${TODAY_US}</echo>
    </target>

    <target name="clean" description="Delete old build, lib, dist aritifacts">
        <delete includeemptydirs="true" failonerror="false">
            <!-- avoid problems with package name changes by deleting everything -->
            <fileset dir="${build.home}"/>
        </delete>
        <delete file="tptp.jar"/>
        <delete includeemptydirs="true" failonerror="false"> <!-- keep local ivy lib up to date -->
            <fileset dir="${basedir}/lib"> <!-- keep ./lib -->
                <include name="*.jar"/>
            </fileset>
        </delete>
    </target>

</project>
